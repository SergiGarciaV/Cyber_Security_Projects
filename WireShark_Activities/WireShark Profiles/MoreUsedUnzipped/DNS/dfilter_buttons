# This file is automatically generated, DO NOT MODIFY.
"TRUE","DNS//All DNS","dns","Show me just the DNS Packets"
"TRUE","DNS//Type A - Just IPv4","dns.qry.type == 1","Show me Requests or Responses for IPv4 hosts only"
"TRUE","DNS//Type AAAA - Just IPv6","dns.qry.type == 28","Show me Requests or Responses for IPv6 hosts only"
"TRUE","DNS//Type MX - Just Mail Exch.","dns.qry.type == 15","Show me Requests or Responses for Mail Exchange hosts only"
"TRUE","DNS//Multicast DNS","mdns","Show me just the Multicast DNS Packets"
"TRUE","DNS//DNS over UDP (Client)","udp.port==53","Show me the Client/Server queries on client's behalf"
"TRUE","DNS//DNS over TCP (Zone DNS)","tcp.port==53","Show me the Zone transfers or the query for SOA that happens before the zone transfer. TCP and DNS"
"TRUE","DNS//DNS over TCP or UDP","tcp.port==53 or udp.port==53","Show me the Client/Server queries on client's behalf"
"TRUE","DNS//DNS Transaction ID","dns.id eq ${dns.id}","Show me all packets with the same ID.  Optimum is 2, more means retransmission due to lack of response"
"TRUE","DNS Root//Root Record","dns.resp.type eq 41","Show me any DNS Root Records"
"TRUE","DNS Root//DNS Root Servers IPv4","ip.addr in {198.41.0.4, 199.9.14.201, 192.33.4.12,199.7.91.13, 192.203.230.10, 192.5.5.241, 192.112.36.4, 198.97.190.53, 192.36.148.17, 192.58.128.30, 193.0.14.129, 199.7.83.42, 202.12.27.33}","Show me IPv4 addresses for all of the 13 Root Servers"
"TRUE","DNS Root//DNS Root Servers IPv6","ipv6.addr in {2001:503:ba3e::2:30, 2001:500:200::b, 2001:500:2::c, 2001:500:2::c, 2001:500:2d::d, 2001:500:a8::e, 2001:500:2f::f, 2001:500:1::53, 2001:500:12::d0d, 2001:7fe::53, 2001:503:c27::2:30, 2001:7fd::1, 2001:500:9f::42, 2001:dc3::35}","Show me IPv6 addresses for all of the 13 Root Servers"
"TRUE","DNS Root//DNS Root Servers IPv4 or IPv6","ip.addr in {198.41.0.4, 199.9.14.201, 192.33.4.12,199.7.91.13, 192.203.230.10, 192.5.5.241, 192.112.36.4, 198.97.190.53, 192.36.148.17, 192.58.128.30, 193.0.14.129, 199.7.83.42, 202.12.27.33} or ipv6.addr in {2001:503:ba3e::2:30, 2001:500:200::b, 2001:500:2::c, 2001:500:2::c, 2001:500:2d::d, 2001:500:a8::e, 2001:500:2f::f, 2001:500:1::53, 2001:500:12::d0d, 2001:7fe::53, 2001:503:c27::2:30, 2001:7fd::1, 2001:500:9f::42, 2001:dc3::35}","Show me both IPv4 and IPv6 addresses for all of the 13 Root Servers"
"TRUE","DNS Query//All Query/Requests","dns.flags.response == 0","Show me all DNS queries before responses"
"TRUE","DNS Query//* ANY","dns.qry.type == 255","Show me all records of all types known to the name server"
"TRUE","DNS Query//A - Just IPv4","dns.qry.type == 1","Show me Requests or Responses for IPv4 hosts only"
"TRUE","DNS Query//AAAA - Just IPv6","dns.qry.type == 28","Show me Requests or Responses for IPv6 hosts only"
"TRUE","DNS Query//Not AAAA","dns.qry.type != 28","Show me DNS queries that are not for AAAA IPv6 records"
"TRUE","DNS Query//Not A or AAAA","dns and not dns.qry.type in {1 28}","Show me any requests other than A IPv4 or AAAA IPv6"
"TRUE","DNS Query//SOA","dns.qry.type == 6","Start of Authority records. Comes from another authoritative server for that Zone - used as a check before a zone transfer"
"TRUE","DNS Query//PTR","dns.qry.type == 12","Start of Authority records. Comes from another authoritative server for that Zone - used as a check before a zone transfer"
"TRUE","DNS Query//TXT","dns.qry.type == 16","Start of Authority records. Comes from another authoritative server for that Zone - used as a check before a zone transfer"
"TRUE","DNS Query//SRV","dns.qry.type == 33","Show me all the packets that correspond to this Service location record"
"TRUE","DNS Query//Recursion Desired","dns.flags.recdesired==1","Show me all the DNS Request with Recursion desired"
"TRUE","DNS Query//Zone//Zone Transfer","dns.qry.type in {251 252} or dns.flags.opcode eq 4","Show me Zone Transfer - Incremental or All Records"
"TRUE","DNS Query//Zone//AXFR","dns.qry.type == 252","Show me all records Zone Transfer"
"TRUE","DNS Query//Zone//IXFR","dns.qry.type == 251","Show me Incremental Zone Transfer"
"TRUE","DNS Response//All Responses","dns.flags.response == 1","Show me all the DNS Responses"
"TRUE","DNS Response//NS","dns.resp.type == 0x0002","Show me the responses that contain a Authoritative Name Server"
"TRUE","DNS Response//CNAME","dns.resp.type == 0x0005","Show me the responses that contain a CNAME value"
"TRUE","DNS Response//SOA","dns.resp.type == 0x0006","Show me the responses that contain a Start of Authority records. Comes from another authoritative server for that Zone - used as a check before a zone transfer"
"TRUE","DNS Response//PTR","dns.resp.type == 12","Show me the responses that contain a domain name pointer, like to a Authoritative Name Server"
"TRUE","DNS Response//TXT","dns.resp.type == 16","Show me DNS Responses that contain an Authoritative Name Server"
"TRUE","DNS Response//Response with Recursion","dns.flags.recavail == 1","Show me the DNS Responses stating recursion is available"
"TRUE","Troubleshooting//Request//DNS for specific host","dns.qry.name matches \x22cellstream.com\x22","Find a particular name in the DNS Query.  Change the name to what you want.  Note: The dot is a wildcard, not a dot.  What we see as a dot in DNS is really a byte count of the preceding label; you want the dot to be a metacharacter wildcard"
"TRUE","Troubleshooting//DNS packet contains a \x5c\x22string\x5c\x22","dns contains \x22string\x22","Find DNS packets that contain this \x22string\x22.  Replace the quoted string with what you need."
"TRUE","Troubleshooting//DNS Response Time > 250ms","dns && dns.time >= 0.250","Show me all DNS response times >250ms"
"TRUE","Troubleshooting//mDNS Response Time > 750ms","mdns && dns.time >= 0.750","Show me all Multicast DNS response times >250ms"
"TRUE","Troubleshooting//DNS traffic on wrong port","dns and (!tcp.port==53 or !udp.port==53)","DNS traffic that is weirdly not on port 53.  Why?"
"TRUE","Troubleshooting//mDNS traffic on wrong port","mdns and (!tcp.port==5353 or !udp.port==5353)","Multicast DNS traffic that is weirdly not on port 53.  Why?"
"TRUE","Troubleshooting//Request//Query-NoReply","dns.flags.response eq 0 and !dns.response_in and udp.port eq 53","Query without the Wireshark \x22Response in Packet\x22 field. Filtered for port 53 to remove any multicast DNS"
"TRUE","Troubleshooting//Response//DNS Errors","dns.flags.rcode != 0 or (dns.flags.response eq 1 and not (dns.a or !dns.aaaa))","All errors,  including AAAA no name and A | AAAA with no error,  but also no address"
"TRUE","Troubleshooting//Response//DNS Postive Rsp","dns.flags.rcode == 0 ","What is the fastest reply seen?  Compare to the slower responses.  Same DNS server?  Same queries?"
"TRUE","Troubleshooting//Response//Slow Positive Rsp","dns.flags.rcode == 0 && dns.time gt .1","Is it due to recursion, or the Resolver being slow?"
"TRUE","Troubleshooting//Retransmission//Retransmissions","dns.retransmission","Show me DNS retransmissions.  Either the query or response, or both had to be retransmitted.  Packet loss is the usual suspect."
"TRUE","Troubleshooting//Retransmission//Request Retrans","dns.retransmit_request ","How many retransmissions for the stream? For the client? Packet loss is the usual suspect."
"TRUE","Troubleshooting//Retransmission//Response Retrans","dns.retransmit_response","How many retransmissions for the stream? For the server? Packet loss is the usual suspect."
"TRUE","Troubleshooting//NS Country//NS in CN|IR|RU","dns.ns matches \x22cn$|ir$|ru$\x22","Show me and authoritative name servers from China or Russia or Iran"
"TRUE","DNSSEC//DNSSEC Record Types","dns.qry.type in {39,43,46..48,32769}","Show me the DNSSEC traffic"
"TRUE","DNSSEC//NS Cannot DNSSEC","dns.resp.z.do == 0","DNSSEC: Client requested it, but server is incapable"
"TRUE","By Provider//Cloudflare","ip.addr eq 1.1.1.1","Show me all the Cloudfare DNS Traffic to/from 1.1.1.1"
"TRUE","By Provider//Google 1","ip.addr eq 8.8.8.8","Show me all the Google DNS Traffic to/from 8.8.8.8"
"TRUE","By Provider//Google 2","ip.addr eq 8.8.4.4","Show me all the Google DNS Traffic to/from 8.8.4.4"
"TRUE","Other Packets//UDP Stream","udp.stream == ${udp.stream}","Filter for whichever UDP stream is currently selected"
"TRUE","Other Packets//TCP Stream","tcp.stream == ${tcp.stream}","Filter for whichever TCP stream is currently selected"
"TRUE","Other Packets//Marked","frame.marked == 1","When making the filter takes too long, mark (ctrl/cmd + m) packets of interest.  Then filter for marks.   Great when you filter for something specific, then Edit | Mark All Displayed, then take off the filter and see surrounding packets."
